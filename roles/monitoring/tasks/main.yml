---
  - name: Copy file prometheus.yml
    copy: 
      src: prometheus.yml
      dest: /tmp/prometheus.yml
      owner: nobody
      group: nogroup
      mode: 0644

  - name: Create a network
    docker_network:
      name: monitoring

  - name: Cadvisor Container
    docker_container:
      name: cadvisor
      image: google/cadvisor
      hostname: cadvisor
      state: started
      userns_mode: "host"
      pull: no
      networks:
        - name: monitoring
      ports:
      - 8080:8080  
      recreate: yes
      restart_policy: no
      memory: 256M
      memory_reservation: 128M
      memory_swap: 0M
      volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro

  - name: Node Exporter Container
    docker_container:
      name: node-exporter
      image: prom/node-exporter:latest
      hostname: node-exporter
      state: started
      recreate: yes
      restart_policy: unless-stopped
      memory: 64M
      memory_reservation: 32M
      memory_swap: 0M
      pull: no
      networks:
        - name: monitoring

  - name: Prometheus Container
    docker_container:
      name: prometheus
      image: prom/prometheus:latest
      hostname: prometheus
      state: started
      recreate: no
      restart_policy: unless-stopped
      memory: 256M
      memory_reservation: 128M
      memory_swap: 0M
      pull: no
      networks:
        - name: monitoring
      volumes:
      - prometheus_config:/etc/prometheus/
      - prometheus_data:/prometheus
      - /tmp/prometheus.yml:/etc/prometheus/prometheus.yml
      command: >
        --config.file=/etc/prometheus/prometheus.yml

  - name: Grafana Container
    docker_container:
      name: grafana
      image: grafana/grafana
      hostname: grafana
      state: started
      recreate: yes
      restart_policy: unless-stopped
      memory: 256M
      memory_reservation: 128M
      memory_swap: 0M
      pull: no
      ports:
      - 3000:3000
      env:
        GF_SECURITY_ADMIN_PASSWORD: "{{ gf_security_admin_password }}"
        GF_USERS_ALLOW_SIGN_UP: "{{ gf_users_allow_sign_up }}"
      networks:
        - name: monitoring
      volumes:
      - grafana_data:/var/lib/grafana

  - name: Delete file /tmp/docker-compose.yml
    file:
      path: /tmp/docker-compose.yml
      state: absent