---
  - name: Create Directory {{ docker_service_dir }}
    file: 
      path: "{{ docker_service_dir }}"
      state: directory
      owner: root
      group: root
      mode: 0755

  - name: Create File "{{ docker_service_dir }}/{{ docker_service_options }}"
    file: 
      path: "{{ docker_service_dir }}/{{ docker_service_options }}"
      state: touch
      owner: root
      group: root
      mode: 0644
  
  - name: Get dockerd Path
    shell: which dockerd
    register: dockerd_result

  - name: Configure Service
    blockinfile:
      dest: "{{ docker_service_dir }}/{{ docker_service_options }}"
      block: |
        [Service]
        ExecStart=
        ExecStart={{ dockerd_result.stdout }} -H unix:// -H tcp://0.0.0.0:2375

  - name: Restart Service docker
    systemd:
      state: restarted
      daemon_reload: yes
      name: docker

  - name: Set public_ip from ip_range
    set_fact:
      public_ip: "{{ ansible_all_ipv4_addresses | select('match', ip_range) | list | first }}"
    when: ip_range is defined

  - name: Init a new swarm with default parameters
    docker_swarm:
      state: present
      advertise_addr: "{{ public_ip }}"

  - name: Deploy portainer Stack
    docker_stack:
      state: present
      name: portainer
      compose:
      - version: '3.2'
        services:
          portainer:
            image: 'portainer/portainer'
            hostname: portainer
            networks:
              - portainer_agent
            ports:
              - '9000:9000'
            volumes:
              - 'portainer_data:/data'
              - '/var/run/docker.sock:/var/run/docker.sock'
            deploy:
              resources:
                reservations:
                  cpus: '.125'
                  memory: 128M
                limits:
                  cpus: '0.250'
                  memory: 256M
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s
        volumes:
          portainer_data:
            driver: local
        networks:
          portainer_agent:
            driver: overlay
            attachable: true